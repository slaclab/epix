//////////////////////////////////////////////////////////////////////////////
// This file is part of 'EPIX Development Firmware'.
// It is subject to the license terms in the LICENSE.txt file found in the 
// top-level directory of this distribution and at: 
//    https://confluence.slac.stanford.edu/display/ppareg/LICENSE.html. 
// No part of 'EPIX Development Firmware', including this file, 
// may be copied, modified, propagated, or distributed except according to 
// the terms contained in the LICENSE.txt file.
//////////////////////////////////////////////////////////////////////////////
#define BUS_OFFSET         (0x80000000)

#define ADC_TEST_OFFSET    (0x04000000)
#define ADC0_RDO_OFFSET    (0x04100000)
#define ADC1_RDO_OFFSET    (0x04200000)
#define ADC2_RDO_OFFSET    (0x04300000)
#define ADC0_CFG_OFFSET    (0x04400000)
#define ADC1_CFG_OFFSET    (0x04400800)
#define ADC2_CFG_OFFSET    (0x04401000)

#define LOG_MEM_OFFSET     (BUS_OFFSET+0x06000000)


#define ADC0_CH0DLY_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x00<<2))
#define ADC0_CH1DLY_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x01<<2))
#define ADC0_CH2DLY_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x02<<2))
#define ADC0_CH3DLY_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x03<<2))
#define ADC0_CH4DLY_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x04<<2))
#define ADC0_CH5DLY_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x05<<2))
#define ADC0_CH6DLY_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x06<<2))
#define ADC0_CH7DLY_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x07<<2))
#define ADC0_FRMDLY_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x20))
#define ADC0_LOCKED_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x30))
#define ADC0_FRAME_REG  (BUS_OFFSET+ADC0_RDO_OFFSET+(0x34))
#define ADC0_LCNTRST_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x38))
#define ADC0_CH0DBG_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x20<<2))
#define ADC0_CH1DBG_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x21<<2))
#define ADC0_CH2DBG_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x22<<2))
#define ADC0_CH3DBG_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x23<<2))
#define ADC0_CH4DBG_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x24<<2))
#define ADC0_CH5DBG_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x25<<2))
#define ADC0_CH6DBG_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x26<<2))
#define ADC0_CH7DBG_REG (BUS_OFFSET+ADC0_RDO_OFFSET+(0x27<<2))

#define ADC1_CH0DLY_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x00<<2))
#define ADC1_CH1DLY_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x01<<2))
#define ADC1_CH2DLY_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x02<<2))
#define ADC1_CH3DLY_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x03<<2))
#define ADC1_CH4DLY_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x04<<2))
#define ADC1_CH5DLY_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x05<<2))
#define ADC1_CH6DLY_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x06<<2))
#define ADC1_CH7DLY_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x07<<2))
#define ADC1_FRMDLY_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x20))
#define ADC1_LOCKED_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x30))
#define ADC1_FRAME_REG  (BUS_OFFSET+ADC1_RDO_OFFSET+(0x34))
#define ADC1_LCNTRST_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x38))
#define ADC1_CH0DBG_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x20<<2))
#define ADC1_CH1DBG_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x21<<2))
#define ADC1_CH2DBG_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x22<<2))
#define ADC1_CH3DBG_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x23<<2))
#define ADC1_CH4DBG_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x24<<2))
#define ADC1_CH5DBG_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x25<<2))
#define ADC1_CH6DBG_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x26<<2))
#define ADC1_CH7DBG_REG (BUS_OFFSET+ADC1_RDO_OFFSET+(0x27<<2))

#define ADC2_CH0DLY_REG (BUS_OFFSET+ADC2_RDO_OFFSET+(0x00<<2))
#define ADC2_CH1DLY_REG (BUS_OFFSET+ADC2_RDO_OFFSET+(0x01<<2))
#define ADC2_CH2DLY_REG (BUS_OFFSET+ADC2_RDO_OFFSET+(0x02<<2))
#define ADC2_CH3DLY_REG (BUS_OFFSET+ADC2_RDO_OFFSET+(0x03<<2))
#define ADC2_FRMDLY_REG (BUS_OFFSET+ADC2_RDO_OFFSET+(0x20))
#define ADC2_LOCKED_REG (BUS_OFFSET+ADC2_RDO_OFFSET+(0x30))
#define ADC2_FRAME_REG  (BUS_OFFSET+ADC2_RDO_OFFSET+(0x34))
#define ADC2_LCNTRST_REG (BUS_OFFSET+ADC2_RDO_OFFSET+(0x38))
#define ADC2_CH0DBG_REG (BUS_OFFSET+ADC2_RDO_OFFSET+(0x20<<2))
#define ADC2_CH1DBG_REG (BUS_OFFSET+ADC2_RDO_OFFSET+(0x21<<2))
#define ADC2_CH2DBG_REG (BUS_OFFSET+ADC2_RDO_OFFSET+(0x22<<2))
#define ADC2_CH3DBG_REG (BUS_OFFSET+ADC2_RDO_OFFSET+(0x23<<2))


#define ADC0_PWRMOD_REG (BUS_OFFSET+ADC0_CFG_OFFSET+(0x8<<2))
#define ADC1_PWRMOD_REG (BUS_OFFSET+ADC1_CFG_OFFSET+(0x8<<2))
#define ADC2_PWRMOD_REG (BUS_OFFSET+ADC2_CFG_OFFSET+(0x8<<2))
#define ADC0_TSTMOD_REG (BUS_OFFSET+ADC0_CFG_OFFSET+(0xD<<2))
#define ADC1_TSTMOD_REG (BUS_OFFSET+ADC1_CFG_OFFSET+(0xD<<2))
#define ADC2_TSTMOD_REG (BUS_OFFSET+ADC2_CFG_OFFSET+(0xD<<2))
#define ADC0_OUTMOD_REG (BUS_OFFSET+ADC0_CFG_OFFSET+(0x14<<2))
#define ADC1_OUTMOD_REG (BUS_OFFSET+ADC1_CFG_OFFSET+(0x14<<2))
#define ADC2_OUTMOD_REG (BUS_OFFSET+ADC2_CFG_OFFSET+(0x14<<2))

#define ADC_TEST_CHAN_REG (BUS_OFFSET+ADC_TEST_OFFSET+(0x0<<2))
#define ADC_TEST_MASK_REG (BUS_OFFSET+ADC_TEST_OFFSET+(0x1<<2))
#define ADC_TEST_PATT_REG (BUS_OFFSET+ADC_TEST_OFFSET+(0x2<<2))
#define ADC_TEST_SMPL_REG (BUS_OFFSET+ADC_TEST_OFFSET+(0x3<<2))
#define ADC_TEST_TOUT_REG (BUS_OFFSET+ADC_TEST_OFFSET+(0x4<<2))
#define ADC_TEST_REQ_REG  (BUS_OFFSET+ADC_TEST_OFFSET+(0x5<<2))
#define ADC_TEST_PASS_REG (BUS_OFFSET+ADC_TEST_OFFSET+(0x6<<2))
#define ADC_TEST_FAIL_REG (BUS_OFFSET+ADC_TEST_OFFSET+(0x7<<2))


#define EPIX_PWR_REG       (BUS_OFFSET+0x01000000+(0x00))
#define EPIX_ADC_ALIGN_REG (BUS_OFFSET+0x01000000+(0x10))
#define IDAC_EN_REG        (BUS_OFFSET+0x01000000+(0x240))
#define IDAC_START_REG     (BUS_OFFSET+0x01000000+(0x244))
#define IDAC_STOP_REG      (BUS_OFFSET+0x01000000+(0x248))
#define IDAC_STEP_REG      (BUS_OFFSET+0x01000000+(0x24C))
#define IDAC_POINTS_REG    (BUS_OFFSET+0x01000000+(0x250))
#define IDAC_VAL           (BUS_OFFSET+0x01300040+(0x9*4))

uint32_t tstModeAdc[] = {ADC0_TSTMOD_REG, ADC1_TSTMOD_REG, ADC2_TSTMOD_REG};
uint32_t frmDlyAdc[] = {ADC0_FRMDLY_REG, ADC1_FRMDLY_REG, ADC2_FRMDLY_REG};
uint32_t frmLocAdc[] = {ADC0_LOCKED_REG, ADC1_LOCKED_REG, ADC2_LOCKED_REG};
uint32_t cntLocRstAdc[] = {ADC0_LCNTRST_REG, ADC1_LCNTRST_REG, ADC2_LCNTRST_REG};
uint32_t frameAdc[] = {ADC0_FRAME_REG, ADC1_FRAME_REG, ADC2_FRAME_REG};
uint32_t dataDlyChAdc[3][8] = {
   {ADC0_CH0DLY_REG, ADC0_CH1DLY_REG, ADC0_CH2DLY_REG, ADC0_CH3DLY_REG, ADC0_CH4DLY_REG, ADC0_CH5DLY_REG, ADC0_CH6DLY_REG, ADC0_CH7DLY_REG}, 
   {ADC1_CH0DLY_REG, ADC1_CH1DLY_REG, ADC1_CH2DLY_REG, ADC1_CH3DLY_REG, ADC1_CH4DLY_REG, ADC1_CH5DLY_REG, ADC1_CH6DLY_REG, ADC1_CH7DLY_REG}, 
   {ADC2_CH0DLY_REG, ADC2_CH1DLY_REG, ADC2_CH2DLY_REG, ADC2_CH3DLY_REG, ADC2_CH3DLY_REG, ADC2_CH3DLY_REG, ADC2_CH3DLY_REG, ADC2_CH3DLY_REG}
};
uint32_t debugAdc[3][8] = {
   {ADC0_CH0DBG_REG, ADC0_CH1DBG_REG, ADC0_CH2DBG_REG, ADC0_CH3DBG_REG, ADC0_CH4DBG_REG, ADC0_CH5DBG_REG, ADC0_CH6DBG_REG, ADC0_CH7DBG_REG}, 
   {ADC1_CH0DBG_REG, ADC1_CH1DBG_REG, ADC1_CH2DBG_REG, ADC1_CH3DBG_REG, ADC1_CH4DBG_REG, ADC1_CH5DBG_REG, ADC1_CH6DBG_REG, ADC1_CH7DBG_REG}, 
   {ADC2_CH0DBG_REG, ADC2_CH1DBG_REG, ADC2_CH2DBG_REG, ADC2_CH3DBG_REG, ADC2_CH3DBG_REG, ADC2_CH3DBG_REG, ADC2_CH3DBG_REG, ADC2_CH3DBG_REG}
};

